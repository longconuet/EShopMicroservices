version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=CatalogDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_catalog:/var/lib/postgresql/data/

  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=catalogdb;Port=5432;User Id=postgres;Password=secret;Database=CatalogDb;Include Error Detail=true
    depends_on:
      - catalogdb
    ports:
      - "6000:8080"
      - "6060:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  basketdb:
    container_name: basketdb
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=BasketDb
    ports:
      - "5433:5432"
    volumes:
      - postgres_basket:/var/lib/postgresql/data/

  distributedcache:
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"

  orderdb:
    container_name: orderdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=123456a@
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_order:/var/opt/mssql

  basket.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=basketdb;Port=5432;User Id=postgres;Password=secret;Database=BasketDb;Include Error Detail=true
      - ConnectionStrings__Redis=distributedcache:6379
      - GrpcSettings__DiscountUrl=https://discount.grpc:8081
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__Username=guest
      - MessageBroker__Password=guest
    depends_on:
      - basketdb
      - distributedcache
      - discount.grpc
      - messagebroker
    ports:
      - "6001:8080"
      - "6061:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  discount.grpc:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Data Source=/app/data/discountdb
    ports:
      - "6002:8080"
      - "6062:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ./data:/app/data
 
  messagebroker:
    container_name: messagebroker
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASSWORD=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    
  ordering.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=orderdb;Database=OrderDb;User Id=sa;Password=123456a@;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__Username=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFullfilment=false
    ports:
      - "6003:8080"
      - "6063:8081"
    depends_on:
      - orderdb
      - messagebroker
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  yarpapigateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
      - ordering.api
      - catalog.api
      - basket.api
    ports:
      - "6004:8080"
      - "6064:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
 
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  elasticsearch:
    container_name: elasticsearch
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601" 
